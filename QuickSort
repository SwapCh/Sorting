// Quick Sort(using Pivot element)
#include <stdio.h>

int partition(int a[],int low, int high){
    int pivot=a[high];//here we consider the last element to be the pivot
    int i= low-1;//Initially -1
    int j,temp=0;
    //This loop will send all the smaller elements to the left of the Pivot
    for(j=low;j<high;j++){
        if(a[j]<pivot){
            i++;
            temp=a[j];
            a[j]=a[i];
            a[i]=temp;
        }
    }
    //Now we put the pivot at the right place by placing it just next to the set of smaller numbers and swapping it with the the number there.
    i++;
    temp=a[i];
    a[i]=pivot;//pivot=a[j]
    a[j]=temp;
    return i;
}

void quicksort(int a[], int low, int high){
    if(low<high){
        int pivotIndex=partition(a,low,high);
        quicksort(a,low,pivotIndex-1);
        quicksort(a,pivotIndex+1,high);
    }
}

int main() {
    int a[]={3,2,6,1,55,32,55};
    int n=sizeof(a)/sizeof(a[0]);//sizeof returns rhe size of array in bytes not in no of elements
    quicksort(a,0,n-1);
    int i;
    for(i=0;i<n;i++){
        printf("%d ", a[i]);
    }
    return 0;
}
